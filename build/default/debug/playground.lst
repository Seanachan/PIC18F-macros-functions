MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (LIST)
                      00001 LIST P=18F4520
                      00002 #include <p18f4520.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 17 2019
                      00005 ;  MPASM PIC18F4520 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01489         LIST
                      00003 #include "toolbelt.asm"
                      00001 ; ===================== toolbelt.inc (MPASM) =====================
                      00002 
                      00003 ; --- tiny helpers ---
                      00004 MOVLF    MACRO val, dest       ; dest = literal
                      00005         MOVLW   val
                      00006         MOVWF   dest, ACCESS
                      00007         ENDM
                      00008 SETBIT   MACRO f,b             ; f.b = 1
                      00009         BSF     f,b
                      00010         ENDM
                      00011 CLRBIT   MACRO f,b             ; f.b = 0
                      00012         BCF     f,b
                      00013         ENDM
                      00014 XCHG     MACRO a,b             ; swap a<->b (uses WREG)
                      00015         MOVF    a,W
                      00016         XORWF   b,F
                      00017         XORWF   a,F
                      00018         XORWF   b,F
                      00019         ENDM
                      00020 
                      00021 ; --- 16-bit add/sub/cmp (dest += src, etc.) ---
                      00022 ADD16    MACRO dL,dH,sL,sH
                      00023         MOVF    sL,W
                      00024         ADDWF   dL,F
                      00025         MOVF    sH,W
                      00026         ADDWFC  dH,F
                      00027         ENDM
                      00028 
                      00029 ADD16_TO MACRO aL,aH, bL,bH, rL,rH
                      00030         ; rL = aL + bL
                      00031         MOVFF   aL, rL
                      00032         MOVF    bL, W
                      00033         ADDWF   rL, F
                      00034 
                      00035         ; rH = aH + bH + carry
                      00036         MOVFF   aH, rH
                      00037         MOVF    bH, W
                      00038         ADDWFC  rH, F
                      00039         ENDM
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00040 
                      00041 SUB16    MACRO dL,dH,sL,sH ;d -= s
                      00042         MOVF    sL,W
                      00043         SUBWF   dL,F
                      00044         MOVF    sH,W
                      00045         SUBWFB  dH,F
                      00046         ENDM
                      00047 
                      00048 SUB16_TO    MACRO dL,dH,sL,sH, rL, rH ;r = d - s
                      00049         ; rL = dL - sL
                      00050         MOVFF   dL, rL
                      00051         MOVF    sL, W
                      00052         SUBWF   rL, F
                      00053         ; BTFSS STATUS, C  ;for not using SUBWFB
                      00054         ; MOVLF 0x01, 0x40
                      00055 
                      00056         ; rH = dH - sH - borrow
                      00057         MOVFF   dH, rH
                      00058         MOVF    sH, W
                      00059         SUBWF  rH, F
                      00060 
                      00061         ; BTFSC    0x40, 0
                      00062         ; DECF rH
                      00063         ENDM
                      00064 CMP16    MACRO aL,aH,bL,bH     ; sets C/Z from (a-b) without changing a
                      00065         LOCAL   _c1,_c2
                      00066         MOVF    bL,W
                      00067         SUBWF   aL,W           ; W=(aL-bL)
                      00068         MOVWF   0x7F           ; temp in access if allowed; else change
                      00069 _c1     MOVF    bH,W
                      00070         SUBWFB  aH,W
                      00071         ENDM
                      00072 INC16    MACRO xL,xH
                      00073         INCF    xL,F
                      00074         BTFSC   STATUS,0
                      00075         INCF    xH,F
                      00076         ENDM
                      00077 DEC16    MACRO xL,xH
                      00078         MOVLW   1
                      00079         SUBWF   xL,F
                      00080         BTFSS   STATUS,0
                      00081         DECF    xH,F
                      00082         ENDM
                      00083 
                      00084 ; --- logical & arithmetic shifts (16-bit) ---
                      00085 LSL16    MACRO xL,xH
                      00086         BCF     STATUS,0
                      00087         RLCF    xL,F
                      00088         RLCF    xH,F
                      00089         ENDM
                      00090 LSR16    MACRO xL,xH
                      00091         BCF     STATUS,0
                      00092         RRCF    xH,F
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00093         RRCF    xL,F
                      00094         ENDM
                      00095 ASR16    MACRO xL,xH            ; arithmetic >>1
                      00096         BTFSC   xH,7
                      00097         BSF     STATUS,0
                      00098         BTFSS   xH,7
                      00099         BCF     STATUS,0
                      00100         RRCF    xH,F
                      00101         RRCF    xL,F
                      00102         ENDM
                      00103 
                      00104 ; --- 16/8 unsigned division: (dH:dL)/div -> quoH:quoL, rem ---
                      00105 DIV16U8  MACRO dH,dL, div, quoH,quoL, rem, cnt
                      00106         LOCAL   _h,_hge,_hnx,_l,_lge,_lnx
                      00107         CLRF    quoH
                      00108         CLRF    rem
                      00109         MOVLW   8
                      00110         MOVWF   cnt
                      00111 _h      RLCF    dH,F
                      00112         RLCF    rem,F
                      00113         MOVF    div,W
                      00114         SUBWF   rem,W
                      00115         BTFSC   STATUS,0
                      00116         GOTO    _hge
                      00117         BCF     STATUS,0
                      00118         RLCF    quoH,F
                      00119         GOTO    _hnx
                      00120 _hge    MOVF    div,W
                      00121         SUBWF   rem,F
                      00122         BSF     STATUS,0
                      00123         RLCF    quoH,F
                      00124 _hnx    DECFSZ  cnt,F
                      00125         GOTO    _h
                      00126         CLRF    quoL
                      00127         MOVLW   8
                      00128         MOVWF   cnt
                      00129 _l      RLCF    dL,F
                      00130         RLCF    rem,F
                      00131         MOVF    div,W
                      00132         SUBWF   rem,W
                      00133         BTFSC   STATUS,0
                      00134         GOTO    _lge
                      00135         BCF     STATUS,0
                      00136         RLCF    quoL,F
                      00137         GOTO    _lnx
                      00138 _lge    MOVF    div,W
                      00139         SUBWF   rem,F
                      00140         BSF     STATUS,0
                      00141         RLCF    quoL,F
                      00142 _lnx    DECFSZ  cnt,F
                      00143         GOTO    _l
                      00144         ENDM
                      00145 
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00146 ; --- 8x8 -> 16 multiply accumulate: acc += a*b (acc = aH:aL) ---
                      00147 MAC16_8x8 MACRO a,b, accL,accH
                      00148         MOVF    a,W
                      00149         MULWF   b              ; PRODH:PRODL = a*b
                      00150         MOVF    PRODL,W
                      00151         ADDWF   accL,F
                      00152         MOVF    PRODH,W
                      00153         ADDWFC  accH,F
                      00154         ENDM
                      00155 
                      00156 ; FOR8_REG i, limReg, bodyLbl
                      00157 ; for (i=0; i<[*limReg]; i++) bodyLbl();
                      00158 FOR8_REG MACRO i, limReg , bodyLbl
                      00159     LOCAL _loop, _end
                      00160     CLRF    i
                      00161 _loop
                      00162     MOVF    i, W, ACCESS
                      00163     SUBWF   limReg, w, ACCESS
                      00164     BTFSC   STATUS, Z  ; if equal ? stop
                      00165     GOTO    _end
                      00166     BTFSS   STATUS, C  ; if i > limit ? stop
                      00167     GOTO    _end
                      00168 
                      00169     ; <<< Your code here >>>
                      00170     ; you can either write instructions directly here,
                      00171     ; or define a subroutine and replace the CALL below.
                      00172 
                      00173     CALL    bodyLbl    ; body() executes each loop
                      00174 
                      00175     INCF    i, F, ACCESS       ; i++
                      00176     GOTO    _loop
                      00177 _end
Warning[205]: Found directive in column 1. (ENDM)
                      00178 ENDM
                      00179 
                      00180 
                      00181 ; --- simple 8-bit for(i=0;i<limit;i++) { body() } ---
                      00182 FOR8 MACRO i, limit, bodyLbl
                      00183     LOCAL _loop, _end
                      00184     CLRF    i          ; i = 0
                      00185 _loop
                      00186     MOVF    i, W
                      00187     SUBLW   limit      ; compare i with limit
                      00188     BTFSC   STATUS, Z  ; if equal ? stop
                      00189     GOTO    _end
                      00190     BTFSS   STATUS, C  ; if i > limit ? stop
                      00191     GOTO    _end
                      00192 
                      00193     ; <<< Your code here >>>
                      00194     ; you can either write instructions directly here,
                      00195     ; or define a subroutine and replace the CALL below.
                      00196 
                      00197     CALL    bodyLbl    ; body() executes each loop
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00198 
                      00199     INCF    i, F       ; i++
                      00200     GOTO    _loop
                      00201 _end
Warning[205]: Found directive in column 1. (ENDM)
                      00202 ENDM
                      00203 
                      00204 ; ============================================================
                      00205 ; FOR2D_REG i, j, limI, limJ, bodyLbl
                      00206 ; for (i=0; i<[*limI]; i++)
                      00207 ;   for (j=0; j<[*limJ]; j++)
                      00208 ;       bodyLbl();
                      00209 ; Notes:
                      00210 ;  - limI, limJ are register addresses holding the limits.
                      00211 ;  - Compares via (i - limit) so:
                      00212 ;      Z=1 ? i == limit  ? stop
                      00213 ;      C=1 ? i >  limit  ? stop (no-borrow means i >= limit)
                      00214 ; ============================================================
                      00215 FOR2D_REG MACRO i, j, limI, limJ, bodyLbl
                      00216     LOCAL _outer, _inner, _end_inner, _end_outer
                      00217 
                      00218     CLRF    i                 ; i = 0
                      00219 _outer
                      00220     MOVF    limI, W
                      00221     SUBWF   i, W              ; W = i - limI
                      00222     BTFSC   STATUS, Z         ; i == limI ?
                      00223     GOTO    _end_outer
                      00224     BTFSC   STATUS, C         ; i > limI ?
                      00225     GOTO    _end_outer
                      00226 
                      00227     CLRF    j                 ; j = 0
                      00228 _inner
                      00229     MOVF    limJ, W
                      00230     SUBWF   j, W              ; W = j - limJ
                      00231     BTFSC   STATUS, Z         ; j == limJ ?
                      00232     GOTO    _end_inner
                      00233     BTFSC   STATUS, C         ; j > limJ ?
                      00234     GOTO    _end_inner
                      00235 
                      00236     ; ---------- your operation here ----------
                      00237     CALL    bodyLbl
                      00238     ; -----------------------------------------
                      00239 
                      00240     INCF    j, F              ; j++
                      00241     GOTO    _inner
                      00242 
                      00243 _end_inner
                      00244     INCF    i, F              ; i++
                      00245     GOTO    _outer
                      00246 
                      00247 _end_outer
Warning[205]: Found directive in column 1. (ENDM)
                      00248 ENDM
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00249 
                      00250 
                      00251     
                      00252 ; --- memset: fill count bytes at FSRx with value in W ---
                      00253 MEMSET   MACRO fsrL,fsrH, count
                      00254         LOCAL   _ms1,_ms2
                      00255 _ms1    MOVF    count,W
                      00256         BZ      _ms2
                      00257         MOVWF   POSTINC0       ; assumes FSR0 targeted; change if needed
                      00258         DECF    count,F
                      00259         GOTO    _ms1
                      00260 _ms2    ENDM
                      00261 
                      00262 ; --- memcpy: copy count bytes FSR0 -> FSR1 ---
                      00263 MEMCPY   MACRO count
                      00264         LOCAL   _cp1,_cp2
                      00265 _cp1    MOVF    count,W
                      00266         BZ      _cp2
                      00267         MOVF    POSTINC0,W
                      00268         MOVWF   POSTINC1
                      00269         DECF    count,F
                      00270         GOTO    _cp1
                      00271 _cp2    ENDM
                      00272 
                      00273 ; --- nibble helpers ---
                      00274 GET_HINIB MACRO src,dst
                      00275         MOVF    src,W
                      00276         MOVWF   dst
                      00277         SWAPF   dst,F
                      00278         ANDLW   0x0F
                      00279         MOVWF   dst
                      00280         ENDM
                      00281 GET_LONIB MACRO src,dst
                      00282         MOVF    src,W
                      00283         ANDLW   0x0F
                      00284         MOVWF   dst
                      00285         ENDM
                      00286 PACK_NIB  MACRO hi,lo,dst
                      00287         MOVF    hi,W
                      00288         ANDLW   0x0F
                      00289         MOVWF   dst
                      00290         SWAPF   dst,F
                      00291         MOVF    lo,W
                      00292         ANDLW   0x0F
                      00293         IORWF   dst,F
                      00294         ENDM
                      00295 
                      00296 ; div_8_8 divd, divsor, quo_dest, rem_dest
                      00297 ; (divd / divsor) → quotient in quo_dest, remainder in rem_dest
                      00298 ; Uses temps: 0x20 (quo), 0x22 (rem), 0x26 (cnt)
                      00299 
                      00300 div_8_8 MACRO divd, divsor, quo_dest, rem_dest, cnt_dest
                      00301     LOCAL loop, no_sub, next
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00302 
                      00303     CLRF    quo_dest            ; quo
                      00304     CLRF    rem_dest            ; rem
                      00305     MOVLW   8
                      00306     MOVWF   cnt_dest            ; cnt = 8
                      00307 
                      00308 loop:
                      00309     ; shift dividend bit into remainder (MSB-first)
                      00310     BCF     STATUS, C       ; ensure 0 shifts into LSB
                      00311     RLCF    divd, F
                      00312     RLCF    rem_dest, F         ; rem <<= 1 | carry
                      00313 
                      00314     ; compare rem vs divsor (unsigned)
                      00315     MOVF    divsor, W
                      00316     SUBWF   rem_dest, W         ; C=1 if rem >= divsor
                      00317     BTFSS   STATUS, C
                      00318     GOTO    no_sub
                      00319 
                      00320     ; rem >= divsor → subtract, shift '1' into quotient
                      00321     MOVF    divsor, W
                      00322     SUBWF   rem_dest, F         ; rem -= divsor (leaves C=1)
                      00323     RLCF    quo_dest, F         ; shift in 1 to quo
                      00324     GOTO    next
                      00325 
                      00326 no_sub:
                      00327     ; rem < divsor → shift '0' into quotient
                      00328     BCF     STATUS, C
                      00329     RLCF    quo_dest, F
                      00330 
                      00331 next:
                      00332     DECFSZ  cnt_dest, F
                      00333     GOTO    loop
                      00334 
                      00335     CLRF    cnt_dest
Warning[205]: Found directive in column 1. (ENDM)
                      00336 ENDM
                      00337 
                      00338 ;; 16-bit ÷ 16-bit (unsigned, restoring division)
                      00339 ;; (dH:dL) / (vH:vL) → quoH:quoL, remainder in rH:rL
                      00340 ;; cnt is a scratch loop counter (clobbered)
                      00341 ;; Clobbers: WREG, STATUS (C/Z)
                      00342 ;; Assumes operands live in access RAM when using ,ACCESS
                      00343 
                      00344 DIV16U16_UNSIGNED MACRO dH,dL, vH,vL, quoH,quoL, rH,rL, cnt
                      00345     LOCAL _ok, _loop, _ge, _lt, _next, _done, _divzero
                      00346 
                      00347     ; init outputs
                      00348     CLRF    quoH, ACCESS
                      00349     CLRF    quoL, ACCESS
                      00350     CLRF    rH,   ACCESS
                      00351     CLRF    rL,   ACCESS
                      00352 
                      00353     ; handle divisor == 0 (policy: quotient=FFFFh, remainder=dividend)
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00354     MOVF    vL, W, ACCESS
                      00355     IORWF   vH, W, ACCESS
                      00356     BNZ     _ok
                      00357 _divzero
                      00358     MOVLW   0xFF
                      00359     MOVWF   quoH, ACCESS
                      00360     MOVWF   quoL, ACCESS
                      00361     MOVF    dL, W, ACCESS
                      00362     MOVWF   rL, ACCESS
                      00363     MOVF    dH, W, ACCESS
                      00364     MOVWF   rH, ACCESS
                      00365     GOTO    _done
                      00366 
                      00367 _ok
                      00368     MOVLW   d'16'
                      00369     MOVWF   cnt, ACCESS
                      00370 
                      00371 _loop
                      00372     ; shift dividend left; C ends up = old bit15 of dividend
                      00373     BCF     STATUS, C
                      00374     RLCF    dL, F, ACCESS
                      00375     RLCF    dH, F, ACCESS
                      00376 
                      00377     ; shift remainder left, bringing in that bit from C
                      00378     RLCF    rL, F, ACCESS
                      00379     RLCF    rH, F, ACCESS
                      00380 
                      00381     ; compare (rH:rL) ? (vH:vL), leave r intact; final C=1 iff r>=v
                      00382     MOVF    vL, W, ACCESS
                      00383     SUBWF   rL, W, ACCESS           ; W = rL - vL, sets C
                      00384     MOVF    vH, W, ACCESS
                      00385     SUBWFB  rH, W, ACCESS           ; final C from full 16-bit compare
                      00386 
                      00387     ; branch BEFORE touching C
                      00388     BTFSS   STATUS, C
                      00389     GOTO    _lt
                      00390 
                      00391 _ge
                      00392     ; C=1 → quotient bit = 1, then r -= v
                      00393     RLCF    quoL, F, ACCESS
                      00394     RLCF    quoH, F, ACCESS
                      00395     MOVF    vL, W, ACCESS
                      00396     SUBWF   rL, F, ACCESS
                      00397     MOVF    vH, W, ACCESS
                      00398     SUBWFB  rH, F, ACCESS
                      00399     GOTO    _next
                      00400 
                      00401 _lt
                      00402     ; C=0 → quotient bit = 0 (no subtract)
                      00403     RLCF    quoL, F, ACCESS
                      00404     RLCF    quoH, F, ACCESS
                      00405 
                      00406 _next
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00407     DECFSZ  cnt, F, ACCESS
                      00408     GOTO    _loop
                      00409 
                      00410 _done
Warning[205]: Found directive in column 1. (ENDM)
                      00411 ENDM
                      00412 
                      00413 ;;; Integer sqrt via Newton's method (unsigned 16-bit)
                      00414 ;; Input : nH:nL = N
                      00415 ;; In/Out: xH:xL = initial guess on entry; floor(sqrt(N)) on return
                      00416 ;; Scratch: qH:qL (N/x), rH:rL (unused remainder), tH:tL (next x),
                      00417 ;;          iter (outer loop cap), cnt_div (divider loop counter)
                      00418 SQRT16_NEWTON MACRO nH,nL, xH,xL, qH,qL, rH,rL, tH,tL, iter, cnt_div
                      00419     LOCAL _seed_ok, _iter, _done
                      00420 
                      00421     ; N==0 → x=0
                      00422     MOVF    nL, W, ACCESS
                      00423     IORWF   nH, W, ACCESS
                      00424     BNZ     _seed_ok
                      00425     CLRF    xL, ACCESS
                      00426     CLRF    xH, ACCESS
                      00427     GOTO    _done
                      00428 
                      00429 _seed_ok
                      00430     ; ensure x != 0 (avoid div-by-zero)
                      00431     MOVF    xL, W, ACCESS
                      00432     IORWF   xH, W, ACCESS
                      00433     BNZ     $+4
                      00434     MOVFF   nL, xL
                      00435     MOVFF   nH, xH
                      00436 
                      00437     ; optional safety cap: ≤ 16 Newton steps
                      00438     MOVLW   16
                      00439     MOVWF   iter, ACCESS
                      00440 
                      00441 _iter
                      00442     ; q = N / x
                      00443     DIV16U16_UNSIGNED nH,nL, xH,xL, qH, qL, rH, rL, cnt_div
                      00444 
                      00445     ; t = (x + q) >> 1
                      00446     MOVFF   xL, tL
                      00447     MOVF    qL, W, ACCESS
                      00448     ADDWF   tL, F, ACCESS
                      00449     MOVFF   xH, tH
                      00450     MOVF    qH, W, ACCESS
                      00451     ADDWFC  tH, F, ACCESS
                      00452     RRCF    tH, F, ACCESS
                      00453     RRCF    tL, F, ACCESS
                      00454 
                      00455     ; stop if t == x
                      00456     MOVF    tL, W, ACCESS
                      00457     XORWF   xL, W, ACCESS
                      00458     BNZ     $+6
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00459     MOVF    tH, W, ACCESS
                      00460     XORWF   xH, W, ACCESS
                      00461     BZ      _done
                      00462 
                      00463     ; x = t
                      00464     MOVFF   tL, xL
                      00465     MOVFF   tH, xH
                      00466 
                      00467     ; loop guard (separate from divider!)
                      00468     DECFSZ  iter, F, ACCESS
                      00469     GOTO    _iter
                      00470 
                      00471 _done
Warning[205]: Found directive in column 1. (ENDM)
                      00472 ENDM
                      00473 
                      00474 
                      00475 
                      00476 ; 16-bit ÷ 8-bit Unsigned (long division)
                      00477 ; (divH:divL) / divsor  →  quoH:quoL, rem
                      00478 DIV16U8_LONG MACRO divH, divL, divsor, quoH, quoL, rem, cnt
                      00479     LOCAL _loop, _no_sub, _next
                      00480 
                      00481     CLRF    quoH
                      00482     CLRF    quoL
                      00483     CLRF    rem
                      00484     MOVLW   d'9'
                      00485     MOVWF   cnt
                      00486 
                      00487 _loop
                      00488     ; --- shift dividend into remainder (MSB-first) ---
                      00489     BCF     STATUS, C      ; << ensure 0 shifts into divL LSB
                      00490     RLCF    divL, F
                      00491     RLCF    divH, F
                      00492     RLCF    rem, F         ; C now = old bit7 of rem (not used next)
                      00493 
                      00494     ; --- test rem >= divsor (unsigned) ---
                      00495     MOVF    divsor, W
                      00496     SUBWF   rem, W         ; C=1 if rem >= divsor
                      00497     BTFSS   STATUS, C
                      00498     GOTO    _no_sub
                      00499 
                      00500     ; rem >= divsor → subtract and shift '1' into quotient
                      00501     MOVF    divsor, W
                      00502     SUBWF   rem, F         ; leaves C=1 (no borrow)
                      00503     RLCF    quoL, F        ; shift in C=1
                      00504     RLCF    quoH, F
                      00505     GOTO    _next
                      00506 
                      00507 _no_sub
                      00508     ; rem < divsor → shift '0' into quotient
                      00509     BCF     STATUS, C      ; << be explicit: shift 0
                      00510     RLCF    quoL, F
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00511     RLCF    quoH, F
                      00512 
                      00513 _next
                      00514     DECFSZ  cnt, F
                      00515     GOTO    _loop
Warning[205]: Found directive in column 1. (ENDM)
                      00516 ENDM
                      00517 
                      00518 ;; --- Template for recursion ---
                      00519 ;RECUR_FUNC:
                      00520 ;    ; base case
                      00521 ;    <check condition>
                      00522 ;    BZ  BASE_DONE
                      00523 ;
                      00524 ;    ; save current state
                      00525 ;    MOVFF PARAM, TEMP
                      00526 ;    <modify PARAM for recursive call>
                      00527 ;
                      00528 ;    CALL RECUR_FUNC       ; recursion
                      00529 ;
                      00530 ;    ; restore
                      00531 ;    MOVFF TEMP, PARAM
                      00532 ;    <combine result>
                      00533 ;
                      00534 ;BASE_DONE:
                      00535 ;    RETURN
                      00536 
                      00537 ; =========================================================
                      00538 ; GCD8 a, b, dest, t0
                      00539 ; Computes gcd(a, b) for 8-bit unsigned values.
                      00540 ; Result placed in 'dest'. Uses temp byte 't0'.
                      00541 ; Does not require any other macros.
                      00542 ; =========================================================
                      00543 GCD8 MACRO a, b, dest, t0
                      00544     LOCAL _start, _a_zero, _b_zero, _loop, _mod_try, _mod_done, _done
                      00545 
                      00546 _start
                      00547     ; handle edge cases
                      00548     MOVF    a, W
                      00549     BZ      _a_zero
                      00550     MOVF    b, W
                      00551     BZ      _b_zero
                      00552     GOTO    _loop
                      00553 
                      00554 _a_zero
                      00555     MOVFF   b, dest
                      00556     GOTO    _done
                      00557 
                      00558 _b_zero
                      00559     MOVFF   a, dest
                      00560     GOTO    _done
                      00561 
                      00562 ; Euclid loop:
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00563 ; while (b != 0) { t0 = a % b; a = b; b = t0; }
                      00564 _loop
                      00565     ; t0 = a % b  (repeated subtraction modulo)
                      00566     MOVF    a, W
                      00567     MOVWF   t0
                      00568 
                      00569 _mod_try
                      00570     ; try t0 -= b; if borrow (C=0), undo and finish modulo
                      00571     MOVF    b, W
                      00572     SUBWF   t0, F          ; t0 = t0 - b
                      00573     BTFSC   STATUS, C      ; if no borrow (t0 >= 0), keep subtracting
                      00574     GOTO    _mod_try
                      00575 
                      00576     ; borrow occurred → undo last subtract, t0 is remainder
                      00577     MOVF    b, W
                      00578     ADDWF   t0, F          ; t0 += b (restore to positive remainder)
                      00579 
                      00580 _mod_done
                      00581     ; a = b; b = t0
                      00582     MOVFF   b, a
                      00583     MOVFF   t0, b
                      00584 
                      00585     ; if b == 0 → done (gcd in a)
                      00586     MOVF    b, W
                      00587     BZ      _b_zero        ; reuse path: dest = a
                      00588 
                      00589     GOTO    _loop
                      00590 
                      00591 _done
Warning[205]: Found directive in column 1. (ENDM)
                      00592 ENDM
                      00593 
                      00594 ; =========================================================
                      00595 ; GCD16U_STEIN aL,aH, bL,bH, outL,outH,  tL,tH,  k, tmp
                      00596 ; Computes gcd( (aH:aL), (bH:bL) ) → (outH:outL), unsigned.
                      00597 ; Temps:
                      00598 ;   tL:tH = work copy of B
                      00599 ;   k     = common power-of-two count
                      00600 ;   tmp   = 1-byte scratch for swapping
                      00601 ; No other macro dependencies.
                      00602 ; =========================================================
                      00603 GCD16U_STEIN MACRO aL,aH, bL,bH, outL,outH, tL,tH, k, tmp
                      00604     LOCAL _a_zero,_b_zero,_common,_make_a_odd,_gcd_loop,_t_even
                      00605     LOCAL _cmp_swap,_do_swap,_sub,_done,_shift_back
                      00606 
                      00607     ; out = A, t = B
                      00608     MOVFF   aL, outL
                      00609     MOVFF   aH, outH
                      00610     MOVFF   bL, tL
                      00611     MOVFF   bH, tH
                      00612 
                      00613     ; if A == 0 → gcd = B
                      00614     MOVF    outL, W
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00615     IORWF   outH, W
                      00616     BZ      _a_zero
                      00617 
                      00618     ; if B == 0 → gcd = A
                      00619     MOVF    tL, W
                      00620     IORWF   tH, W
                      00621     BZ      _b_zero
                      00622 
                      00623     ; k = 0 (common factors of 2)
                      00624     CLRF    k
                      00625 
                      00626 _common
                      00627     ; while A even AND B even: A>>=1; B>>=1; k++
                      00628     BTFSC   outL, 0
                      00629     GOTO    _make_a_odd
                      00630     BTFSC   tL, 0
                      00631     GOTO    _make_a_odd
                      00632 
                      00633     ; A >>= 1 (logical)
                      00634     BCF     STATUS, C
                      00635     RRCF    outH, F
                      00636     RRCF    outL, F
                      00637     ; B >>= 1 (logical)
                      00638     BCF     STATUS, C
                      00639     RRCF    tH, F
                      00640     RRCF    tL, F
                      00641     INCF    k, F
                      00642     GOTO    _common
                      00643 
                      00644 _make_a_odd
                      00645     ; make A odd: while A even, A >>= 1
                      00646     BTFSC   outL, 0
                      00647     GOTO    _gcd_loop
                      00648     BCF     STATUS, C
                      00649     RRCF    outH, F
                      00650     RRCF    outL, F
                      00651     GOTO    _make_a_odd
                      00652 
                      00653 _gcd_loop
                      00654     ; if B == 0 → done (A is gcd)
                      00655     MOVF    tL, W
                      00656     IORWF   tH, W
                      00657     BZ      _shift_back
                      00658 
                      00659 _t_even
                      00660     ; while B even, B >>= 1
                      00661     BTFSC   tL, 0
                      00662     GOTO    _cmp_swap
                      00663     BCF     STATUS, C
                      00664     RRCF    tH, F
                      00665     RRCF    tL, F
                      00666     GOTO    _t_even
                      00667 
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00668 _cmp_swap
                      00669     ; if A > B, swap(A,B) so that B >= A
                      00670     MOVF    tL, W
                      00671     SUBWF   outL, W        ; W = outL - tL
                      00672     MOVF    tH, W
                      00673     SUBWFB  outH, W        ; C=1 → A >= B
                      00674     BTFSC   STATUS, C
                      00675     GOTO    _do_swap       ; swap if A >= B (safe also for equality)
                      00676 
                      00677     ; B = B - A
                      00678 _sub
                      00679     MOVF    outL, W
                      00680     SUBWF   tL, F
                      00681     MOVF    outH, W
                      00682     SUBWFB  tH, F
                      00683     GOTO    _gcd_loop
                      00684 
                      00685 _do_swap
                      00686     ; swap outL <-> tL  (use tmp)
                      00687     MOVFF   outL, tmp
                      00688     MOVFF   tL,  outL
                      00689     MOVFF   tmp, tL
                      00690     ; swap outH <-> tH
                      00691     MOVFF   outH, tmp
                      00692     MOVFF   tH,  outH
                      00693     MOVFF   tmp, tH
                      00694     GOTO    _sub
                      00695 
                      00696 _shift_back
                      00697     ; restore common factor: A <<= k
                      00698     MOVF    k, W
                      00699     BZ      _done
                      00700     ; loop: while k-- > 0: A <<= 1
                      00701     ; (logical left shift)
                      00702     BCF     STATUS, C
                      00703     RLCF    outL, F
                      00704     RLCF    outH, F
                      00705     DECF    k, F
                      00706     GOTO    _shift_back
                      00707 
                      00708 _a_zero
                      00709     ; gcd = B
                      00710     MOVFF   tL, outL
                      00711     MOVFF   tH, outH
                      00712     GOTO    _done
                      00713 
                      00714 _b_zero
                      00715     ; gcd = A already in out
                      00716 _done
Warning[205]: Found directive in column 1. (ENDM)
                      00717 ENDM
                      00718 
                      00719 ; =========================================================
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00720 ; Comparators
                      00721 ; =========================================================
                      00722 
                      00723 ;---------------------------------------------------------
                      00724 ; CMP16U  — set flags for unsigned a ? b
                      00725 ;   Input: aL,aH, bL,bH
                      00726 ;   Effect: final C = 1 iff a >= b ; final C = 0 iff a < b
                      00727 ;           (Do NOT trust Z for equality)
                      00728 ;---------------------------------------------------------
                      00729 CMP16U MACRO aL,aH, bL,bH
                      00730     MOVF    bL, W, ACCESS
                      00731     SUBWF   aL, W, ACCESS       ; W = aL - bL, sets C/Z for low
                      00732     MOVF    bH, W, ACCESS
                      00733     SUBWFB  aH, W, ACCESS       ; W = aH - bH - !C ; final C is correct for 16-bit
Warning[205]: Found directive in column 1. (ENDM)
                      00734 ENDM
                      00735 
                      00736 ;---------------------------------------------------------
                      00737 ; BR_LT16U label   — branch if a <  b   (unsigned)
                      00738 ; BR_GE16U label   — branch if a >= b   (unsigned)
                      00739 ;   Uses only C from the prior CMP16U
                      00740 ;---------------------------------------------------------
                      00741 BR_LT16U MACRO label
                      00742     BTFSS   STATUS, C           ; C=0 ⇒ a<b
                      00743     GOTO    label
Warning[205]: Found directive in column 1. (ENDM)
                      00744 ENDM
                      00745 
                      00746 BR_GE16U MACRO label
                      00747     BTFSC   STATUS, C           ; C=1 ⇒ a>=b
                      00748     GOTO    label
Warning[205]: Found directive in column 1. (ENDM)
                      00749 ENDM
                      00750 
                      00751 ;---------------------------------------------------------
                      00752 ; BR_EQ16U  aL,aH,bL,bH,label   — branch if a == b
                      00753 ; BR_NE16U  aL,aH,bL,bH,label   — branch if a != b
                      00754 ;   Uses CPFSEQ (does not touch STATUS) to test equality.
                      00755 ;   Safe to call after CMP16U (doesn't clobber C).
                      00756 ;---------------------------------------------------------
                      00757 BR_EQ16U MACRO aL,aH, bL,bH, label
                      00758     LOCAL _neq,_end
                      00759     MOVF    aL, W, ACCESS
                      00760     CPFSEQ  bL, ACCESS          ; skip next if equal
                      00761     GOTO    _neq
                      00762     MOVF    aH, W, ACCESS
                      00763     CPFSEQ  bH, ACCESS
                      00764     GOTO    _neq
                      00765     GOTO    label               ; both bytes equal
                      00766 _neq:
                      00767 _end:
Warning[205]: Found directive in column 1. (ENDM)
                      00768 ENDM
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00769 
                      00770 BR_NE16U MACRO aL,aH, bL,bH, label
                      00771     LOCAL _ne,_end
                      00772     MOVF    aL, W, ACCESS
                      00773     CPFSEQ  bL, ACCESS
                      00774     GOTO    _ne                 ; low differs
                      00775     MOVF    aH, W, ACCESS
                      00776     CPFSEQ  bH, ACCESS
                      00777     GOTO    _ne                 ; high differs
                      00778     GOTO    _end                ; equal → do not branch
                      00779 _ne:
                      00780     GOTO    label
                      00781 _end:
Warning[205]: Found directive in column 1. (ENDM)
                      00782 ENDM
                      00783 
                      00784 ;---------------------------------------------------------
                      00785 ; BR_GT16U  aL,aH,bL,bH,label   — branch if a > b
                      00786 ;   Logic: (a>=b) AND (a!=b) without trusting Z.
                      00787 ;   Keeps C from CMP16U and checks inequality via CPFSEQ.
                      00788 ;---------------------------------------------------------
                      00789 BR_GT16U MACRO aL,aH, bL,bH, label
                      00790     LOCAL _maybe,_end,_ne
                      00791     ; need a>=b first
                      00792     BTFSC   STATUS, C           ; C=1 ⇒ a>=b
                      00793     GOTO    _maybe
                      00794     GOTO    _end                ; a<b → no branch
                      00795 
                      00796 _maybe:
                      00797     ; if a != b, then a>b (since we already know a>=b)
                      00798     MOVF    aL, W, ACCESS
                      00799     CPFSEQ  bL, ACCESS
                      00800     GOTO    _ne
                      00801     MOVF    aH, W, ACCESS
                      00802     CPFSEQ  bH, ACCESS
                      00803     GOTO    _ne                ; equal → not greater
                      00804 
                      00805     GOTO _end
                      00806 _ne:
                      00807     GOTO    label
                      00808 _end:
Warning[205]: Found directive in column 1. (ENDM)
                      00809 ENDM
                      00810 
                      00811 
                      00812 ; =================== sample usage ===================
                      00813 ; ; Compare A(0x31:0x30) with B(0x33:0x32)
                      00814 ; CMP16U  0x30,0x31, 0x32,0x33
                      00815 ; BR_EQ16  equal_u
                      00816 ; BR_LT16U less_u
                      00817 ; ; else greater_u
                      00818 ; GOTO    greater_u
                      00819 
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00820 ; equal_u:
                      00821 ;     ; a==b
                      00822 ;     GOTO done
                      00823 
                      00824 ; less_u:
                      00825 ;     ; a<b (unsigned)
                      00826 ;     GOTO done
                      00827 
                      00828 ; greater_u:
                      00829 ;     ; a>b (unsigned)
                      00830 ; done:
                      00831 
                      00832 ; =================== end of toolbelt.inc ===================
                      00004 
                      00005   CONFIG OSC = INTIO67
                      00006   CONFIG WDT = OFF
                      00007   org 0x00
Warning[207]: Found label after column 1. (_startH)
  00000000            00008   _startH EQU 0x00
  00000001            00009 _startL EQU 0x01
  00000002            00010 _endH EQU 0x02
  00000003            00011 _endL EQU 0x03
                      00012 ;  LFSR 0, 0x000
                      00013 ;  LFSR 1, 0x010
000000 EF?? F???      00014   GOTO main
                      00015 ;=============================  
                      00016 ;=============================
Warning[207]: Found label after column 1. (bodyLbl)
000004                00017   bodyLbl:
                      00018 ;    MOVFF i, POSTINC0
                      00019 ;    MOVFF j, POSTINC1
                      00020 ;    INCF sum, f
                      00021 ;    RETURN
                      00022   
                      00023   #include "mul_extended.asm"
                      00001 ;;=================================
                      00002 ;    Usage: 
                      00003 ;; main:
                      00004 ;    MOVLF 0x4F ,0x10 ;nL
                      00005 ;    MOVLF 0x00, 0x11 ;nH
                      00006 ;    MOVLF 0xE5, 0x12 ;mL
                      00007 ;    MOVLF 0x03, 0x13 ;mH
                      00008 ;
                      00009 ;    RCALL mul_extended
                      00010 ;;=================================
                      00011 
000004                00012 mul_extended:
Warning[207]: Found label after column 1. (nL)
  00000010            00013     nL EQU 0x10
Warning[207]: Found label after column 1. (nH)
  00000011            00014     nH EQU 0x11
Warning[207]: Found label after column 1. (mL)
  00000012            00015     mL EQU 0x12
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (mH)
  00000013            00016     mH EQU 0x13
Warning[207]: Found label after column 1. (dest1)
  00000001            00017     dest1 EQU 0x001
Warning[207]: Found label after column 1. (dest2)
  00000002            00018     dest2 EQU 0x002
Warning[207]: Found label after column 1. (dest3)
  00000003            00019     dest3 EQU 0x003
Warning[207]: Found label after column 1. (dest4)
  00000004            00020     dest4 EQU 0x004
                      00021     ; MOVFF 0x001, nL ;nL
                      00022     ; MOVFF 0x002, nH ;nH
                      00023     ; MOVFF 0x003, mL ;mL
                      00024     ; MOVFF 0x004, mH ;mH
                      00025     ; n * m
                      00026     ;; nH(0x11), nL(0x10)
                      00027     ;; mH(0x13), mL(0x12)
                      00028     ;;out:   Large -->  Small
                      00029     ;;out: 0x004 0x003 0x002 0x001
000004 6A01           00030     CLRF dest1
000006 6A02           00031     CLRF dest2
000008 6A03           00032     CLRF dest3
00000A 6A04           00033     CLRF dest4
Warning[207]: Found label after column 1. (nL_mL)
00000C                00034     nL_mL:
00000C 5010           00035         MOVF nL, w
00000E 0212           00036         MULWF mL
                      00037         
000010 50F3           00038         MOVF PRODL, W
000012 2601           00039         ADDWF dest1, 1
000014 50F4           00040         MOVF PRODH, W
000016 2602           00041         ADDWF dest2, 1
Warning[207]: Found label after column 1. (nH_mL)
000018                00042     nH_mL:
000018 5011           00043         MOVF nH, w
00001A 0212           00044         MULWF mL
                      00045         
00001C 50F3           00046         MOVF PRODL, W
00001E 2602           00047         ADDWF dest2, 1
000020 50F4           00048         MOVF PRODH, W
000022 2203           00049         ADDWFC dest3, 1
Warning[207]: Found label after column 1. (nL_mH)
000024                00050     nL_mH:
000024 5010           00051         MOVF nL, w
000026 0213           00052         MULWF mH
                      00053         
000028 50F3           00054         MOVF PRODL, W
00002A 2602           00055         ADDWF dest2, 1
00002C 50F4           00056         MOVF PRODH, W
00002E 2203           00057         ADDWFC dest3, 1
Warning[207]: Found label after column 1. (nH_mH)
000030                00058     nH_mH:
000030 5011           00059         MOVF nH, w
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000032 0213           00060         MULWF mH
                      00061         
000034 50F3           00062         MOVF PRODL, W
000036 2603           00063         ADDWF dest3, 1
000038 50F4           00064         MOVF PRODH, W
00003A 2204           00065         ADDWFC dest4, 1
                      00066 
Warning[207]: Found label after column 1. (STEP2)
00003C                00067     STEP2:
                      00068         ; if op1(nH(0x11), nL(0x10)) is negative, subtrasct op2 from upper byte
00003C AE11           00069         BTFSS nH, 7 ;is nH is negative
00003E EF?? F???      00070         GOTO STEP3
                      00071         
                      00072         ;upper byte = 0x04, 0x03
000042 5012           00073         MOVF mL, w
000044 5E03           00074         SUBWF dest3
000046 5013           00075         MOVF mH, w
000048 5A04           00076         SUBWFB dest4
                      00077         
Warning[207]: Found label after column 1. (STEP3)
00004A                00078     STEP3:
                      00079         ; if op2(mH(0x13), mL(0x12)) is negative, subtrasct op1 from upper byte
00004A AE13           00080         BTFSS mH, 7 ;mH is negative
00004C EF?? F???      00081         GOTO finish
                      00082         
000050 5010           00083         MOVF nL, w
000052 5E03           00084         SUBWF dest3
000054 5011           00085         MOVF nH, w
000056 5A04           00086         SUBWFB dest4
                      00087         
Warning[207]: Found label after column 1. (finish)
000058                00088     finish:
                      00024 ;  #include "bubble_sort"
                      00025 ;=============================
                      00026 ; MAIN PROGRAM
                      00027 ;=============================
000058                00028 main:
                      00029   ; ====== Prepare three source lists ======
                      00030   MOVLF 0x90, 0x00
000058 0E90               M         MOVLW   0x90
00005A 6E00               M         MOVWF   0x00, ACCESS
                      00031   MOVLF 0x00, 0x01
00005C 0E00               M         MOVLW   0x00
00005E 6E01               M         MOVWF   0x01, ACCESS
                      00032   MOVLF 0x0C, 0x02
000060 0E0C               M         MOVLW   0x0C
000062 6E02               M         MOVWF   0x02, ACCESS
                      00033   MOVLF 0x00, 0x03
000064 0E00               M         MOVLW   0x00
000066 6E03               M         MOVWF   0x03, ACCESS
                      00034   
                      00035   ; ====== Sort merged data ======
                      00036   
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037 ;  DIV16U8 0x10, 0x11, 0x12, 0x20, 0x21, 0x30, 0x31
                      00038 ;  MAC16_8x8 0x12, 0x12, 0x20, 0x21
                      00039 ;  FOR8 0x00, 0x0A, something
                      00040 ;  GCD16U_STEIN 0x01, 0x00, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09
Warning[207]: Found label after column 1. (_finish)
000068                00041   _finish:
000068 0000           00042     NOP
                      00043   MOVLF 0x00, _startH
00006A 0E00               M         MOVLW   0x00
00006C 6E00               M         MOVWF   _startH, ACCESS
Warning[206]: Found call to macro in column 1. (MOVLF)
                      00044 MOVLF 0x03, _startL
00006E 0E03               M         MOVLW   0x03
000070 6E01               M         MOVWF   _startL, ACCESS
Warning[206]: Found call to macro in column 1. (MOVLF)
                      00045 MOVLF 0x00, _endH
000072 0E00               M         MOVLW   0x00
000074 6E02               M         MOVWF   _endH, ACCESS
Warning[206]: Found call to macro in column 1. (MOVLF)
                      00046 MOVLF 0x03, _endL
000076 0E03               M         MOVLW   0x03
000078 6E03               M         MOVWF   _endL, ACCESS
                      00047   CMP16U   _startL, _startH, _endL, _endH
00007A 5003               M     MOVF    _endL, W, ACCESS
00007C 5C01               M     SUBWF   _startL, W, ACCESS  ; W = aL - bL, sets C/Z for low
00007E 5002               M     MOVF    _endH, W, ACCESS
000080 5800               M     SUBWFB  _startH, W, ACCESS  ; W = aH - bH - !C ; final C is correct for 16-bit
                      00048     BR_GT16U _startL, _startH, _endL, _endH, _finish
  0000                    M     LOCAL _maybe,_end,_ne
                          M     ; need a>=b first
000082 B0D8               M     BTFSC   STATUS, C           ; C=1 ⇒ a>=b
000084 EF?? F???          M     GOTO    _maybe
000088 EF?? F???          M     GOTO    _end                ; a<b → no branch
                          M 
00008C                    M _maybe:
                          M     ; if a != b, then a>b (since we already know a>=b)
00008C 5001               M     MOVF    _startL, W, ACCESS
00008E 6203               M     CPFSEQ  _endL, ACCESS
000090 EF?? F???          M     GOTO    _ne
000094 5000               M     MOVF    _startH, W, ACCESS
000096 6202               M     CPFSEQ  _endH, ACCESS
000098 EF?? F???          M     GOTO    _ne                ; equal → not greater
                          M 
00009C EF?? F???          M     GOTO _end
0000A0                    M _ne:
0000A0 EF?? F???          M     GOTO    _finish
0000A4                    M _end:
                      00049     
                      00050 
                      00051 
0000A4 0000           00052   NOP
                      00053   END
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADD16                             
ADD16_TO                          
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000002
AN9                               00000003
ASR16                             
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

BF                                00000000
BGST                              00000005
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BR_EQ16U                          
BR_GE16U                          
BR_GT16U                          
BR_LT16U                          
BR_NE16U                          
BSR                               00000FE0
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLRBIT                            
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMP16                             
CMP16U                            
CREN                              00000004
CS                                00000002
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEC16                             
DIV16U16_UNSIGNED                 
DIV16U8                           
DIV16U8_LONG                      
DONE                              00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
FAST                              00000001
FERR                              00000002
FLT0                              00000000
FLTS                              00000002
FOR2D_REG                         
FOR8                              
FOR8_REG                          
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCD16U_STEIN                      
GCD8                              
GCEN                              00000007
GET_LONIB                         
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
IBF                               00000007
IBOV                              00000005
IDLEN                             00000007
INC16                             
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LSL16                             
LSR16                             
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MAC16_8x8                         
MCLR                              00000003
MEMSET                            
MOVLF                             
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_MCLR                          00000003
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000002
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PACK_NIB                          
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SETBIT                            
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SQRT16_NEWTON                     
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STEP2                             0000003C
STEP3                             0000004A
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SUB16                             
SUB16_TO                          
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XCHG                              
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4520                         00000001
__DEBUG                           
MPASM 5.84                    PLAYGROUND.ASM   10-22-2025  16:32:18         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

__MPLAB_DEBUGGER_SIMULATOR        1
_endH                             00000002
_endL                             00000003
_finish                           00000068
_startH                           00000000
_startL                           00000001
bodyLbl                           00000004
dest1                             00000001
dest2                             00000002
dest3                             00000003
dest4                             00000004
div_8_8                           
finish                            00000058
mH                                00000013
mL                                00000012
main                              00000058
mul_extended                      00000004
nH                                00000011
nH_mH                             00000030
nH_mL                             00000018
nL                                00000010
nL_mH                             00000024
nL_mL                             0000000C

Errors   :     0
Warnings :    37 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

