MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (LIST)
                      00001 LIST P=18F4520
                      00002 #include <p18f4520.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Mar 17 2019
                      00005 ;  MPASM PIC18F4520 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01489         LIST
                      00003 #include "toolbelt.asm"
                      00001 ; ===================== toolbelt.inc (MPASM) =====================
                      00002 
                      00003 ; --- tiny helpers ---
                      00004 MOVLF    MACRO val, dest       ; dest = literal
                      00005         MOVLW   val
                      00006         MOVWF   dest, ACCESS
                      00007         ENDM
                      00008 SETBIT   MACRO f,b             ; f.b = 1
                      00009         BSF     f,b
                      00010         ENDM
                      00011 CLRBIT   MACRO f,b             ; f.b = 0
                      00012         BCF     f,b
                      00013         ENDM
                      00014 XCHG     MACRO a,b             ; swap a<->b (uses WREG)
                      00015         MOVF    a,W
                      00016         XORWF   b,F
                      00017         XORWF   a,F
                      00018         XORWF   b,F
                      00019         ENDM
                      00020 
                      00021 ; --- 16-bit add/sub/cmp (dest += src, etc.) ---
                      00022 ADD16    MACRO dL,dH,sL,sH
                      00023         MOVF    sL,W
                      00024         ADDWF   dL,F
                      00025         MOVF    sH,W
                      00026         ADDWFC  dH,F
                      00027         ENDM
                      00028 SUB16    MACRO dL,dH,sL,sH
                      00029         MOVF    sL,W
                      00030         SUBWF   dL,F
                      00031         MOVF    sH,W
                      00032         SUBWFB  dH,F
                      00033         ENDM
                      00034 CMP16    MACRO aL,aH,bL,bH     ; sets C/Z from (a-b) without changing a
                      00035         LOCAL   _c1,_c2
                      00036         MOVF    bL,W
                      00037         SUBWF   aL,W           ; W=(aL-bL)
                      00038         MOVWF   0x7F           ; temp in access if allowed; else change
                      00039 _c1     MOVF    bH,W
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00040         SUBWFB  aH,W
                      00041         ENDM
                      00042 INC16    MACRO xL,xH
                      00043         INCF    xL,F
                      00044         BTFSC   STATUS,0
                      00045         INCF    xH,F
                      00046         ENDM
                      00047 DEC16    MACRO xL,xH
                      00048         MOVLW   1
                      00049         SUBWF   xL,F
                      00050         BTFSS   STATUS,0
                      00051         DECF    xH,F
                      00052         ENDM
                      00053 
                      00054 ; --- logical & arithmetic shifts (16-bit) ---
                      00055 LSL16    MACRO xL,xH
                      00056         BCF     STATUS,0
                      00057         RLCF    xL,F
                      00058         RLCF    xH,F
                      00059         ENDM
                      00060 LSR16    MACRO xL,xH
                      00061         BCF     STATUS,0
                      00062         RRCF    xH,F
                      00063         RRCF    xL,F
                      00064         ENDM
                      00065 ASR16    MACRO xL,xH            ; arithmetic >>1
                      00066         BTFSC   xH,7
                      00067         BSF     STATUS,0
                      00068         BTFSS   xH,7
                      00069         BCF     STATUS,0
                      00070         RRCF    xH,F
                      00071         RRCF    xL,F
                      00072         ENDM
                      00073 
                      00074 ; --- 16/8 unsigned division: (dH:dL)/div -> quoH:quoL, rem ---
                      00075 DIV16U8  MACRO dH,dL, div, quoH,quoL, rem, cnt
                      00076         LOCAL   _h,_hge,_hnx,_l,_lge,_lnx
                      00077         CLRF    quoH
                      00078         CLRF    rem
                      00079         MOVLW   8
                      00080         MOVWF   cnt
                      00081 _h      RLCF    dH,F
                      00082         RLCF    rem,F
                      00083         MOVF    div,W
                      00084         SUBWF   rem,W
                      00085         BTFSC   STATUS,0
                      00086         GOTO    _hge
                      00087         BCF     STATUS,0
                      00088         RLCF    quoH,F
                      00089         GOTO    _hnx
                      00090 _hge    MOVF    div,W
                      00091         SUBWF   rem,F
                      00092         BSF     STATUS,0
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00093         RLCF    quoH,F
                      00094 _hnx    DECFSZ  cnt,F
                      00095         GOTO    _h
                      00096         CLRF    quoL
                      00097         MOVLW   8
                      00098         MOVWF   cnt
                      00099 _l      RLCF    dL,F
                      00100         RLCF    rem,F
                      00101         MOVF    div,W
                      00102         SUBWF   rem,W
                      00103         BTFSC   STATUS,0
                      00104         GOTO    _lge
                      00105         BCF     STATUS,0
                      00106         RLCF    quoL,F
                      00107         GOTO    _lnx
                      00108 _lge    MOVF    div,W
                      00109         SUBWF   rem,F
                      00110         BSF     STATUS,0
                      00111         RLCF    quoL,F
                      00112 _lnx    DECFSZ  cnt,F
                      00113         GOTO    _l
                      00114         ENDM
                      00115 
                      00116 ; --- 8x8 -> 16 multiply accumulate: acc += a*b (acc = aH:aL) ---
                      00117 MAC16_8x8 MACRO a,b, accL,accH
                      00118         MOVF    a,W
                      00119         MULWF   b              ; PRODH:PRODL = a*b
                      00120         MOVF    PRODL,W
                      00121         ADDWF   accL,F
                      00122         MOVF    PRODH,W
                      00123         ADDWFC  accH,F
                      00124         ENDM
                      00125 
                      00126 ; FOR8_REG i, limReg, bodyLbl
                      00127 ; for (i=0; i<[*limReg]; i++) bodyLbl();
                      00128 FOR8_REG MACRO i, limReg , bodyLbl
                      00129     LOCAL _loop, _end
                      00130     CLRF    i
                      00131 _loop
                      00132     MOVF    i, W, ACCESS
                      00133     SUBWF   limReg, w, ACCESS
                      00134     BTFSC   STATUS, Z  ; if equal ? stop
                      00135     GOTO    _end
                      00136     BTFSS   STATUS, C  ; if i > limit ? stop
                      00137     GOTO    _end
                      00138 
                      00139     ; <<< Your code here >>>
                      00140     ; you can either write instructions directly here,
                      00141     ; or define a subroutine and replace the CALL below.
                      00142 
                      00143     CALL    bodyLbl    ; body() executes each loop
                      00144 
                      00145     INCF    i, F, ACCESS       ; i++
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00146     GOTO    _loop
                      00147 _end
Warning[205]: Found directive in column 1. (ENDM)
                      00148 ENDM
                      00149 
                      00150 
                      00151 ; --- simple 8-bit for(i=0;i<limit;i++) { body() } ---
                      00152 FOR8 MACRO i, limit, bodyLbl
                      00153     LOCAL _loop, _end
                      00154     CLRF    i          ; i = 0
                      00155 _loop
                      00156     MOVF    i, W
                      00157     SUBLW   limit      ; compare i with limit
                      00158     BTFSC   STATUS, Z  ; if equal ? stop
                      00159     GOTO    _end
                      00160     BTFSS   STATUS, C  ; if i > limit ? stop
                      00161     GOTO    _end
                      00162 
                      00163     ; <<< Your code here >>>
                      00164     ; you can either write instructions directly here,
                      00165     ; or define a subroutine and replace the CALL below.
                      00166 
                      00167     CALL    bodyLbl    ; body() executes each loop
                      00168 
                      00169     INCF    i, F       ; i++
                      00170     GOTO    _loop
                      00171 _end
Warning[205]: Found directive in column 1. (ENDM)
                      00172 ENDM
                      00173 
                      00174 ; ============================================================
                      00175 ; FOR2D_REG i, j, limI, limJ, bodyLbl
                      00176 ; for (i=0; i<[*limI]; i++)
                      00177 ;   for (j=0; j<[*limJ]; j++)
                      00178 ;       bodyLbl();
                      00179 ; Notes:
                      00180 ;  - limI, limJ are register addresses holding the limits.
                      00181 ;  - Compares via (i - limit) so:
                      00182 ;      Z=1 ? i == limit  ? stop
                      00183 ;      C=1 ? i >  limit  ? stop (no-borrow means i >= limit)
                      00184 ; ============================================================
                      00185 FOR2D_REG MACRO i, j, limI, limJ, bodyLbl
                      00186     LOCAL _outer, _inner, _end_inner, _end_outer
                      00187 
                      00188     CLRF    i                 ; i = 0
                      00189 _outer
                      00190     MOVF    limI, W
                      00191     SUBWF   i, W              ; W = i - limI
                      00192     BTFSC   STATUS, Z         ; i == limI ?
                      00193     GOTO    _end_outer
                      00194     BTFSC   STATUS, C         ; i > limI ?
                      00195     GOTO    _end_outer
                      00196 
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00197     CLRF    j                 ; j = 0
                      00198 _inner
                      00199     MOVF    limJ, W
                      00200     SUBWF   j, W              ; W = j - limJ
                      00201     BTFSC   STATUS, Z         ; j == limJ ?
                      00202     GOTO    _end_inner
                      00203     BTFSC   STATUS, C         ; j > limJ ?
                      00204     GOTO    _end_inner
                      00205 
                      00206     ; ---------- your operation here ----------
                      00207     CALL    bodyLbl
                      00208     ; -----------------------------------------
                      00209 
                      00210     INCF    j, F              ; j++
                      00211     GOTO    _inner
                      00212 
                      00213 _end_inner
                      00214     INCF    i, F              ; i++
                      00215     GOTO    _outer
                      00216 
                      00217 _end_outer
Warning[205]: Found directive in column 1. (ENDM)
                      00218 ENDM
                      00219 
                      00220 
                      00221     
                      00222 ; --- memset: fill count bytes at FSRx with value in W ---
                      00223 MEMSET   MACRO fsrL,fsrH, count
                      00224         LOCAL   _ms1,_ms2
                      00225 _ms1    MOVF    count,W
                      00226         BZ      _ms2
                      00227         MOVWF   POSTINC0       ; assumes FSR0 targeted; change if needed
                      00228         DECF    count,F
                      00229         GOTO    _ms1
                      00230 _ms2    ENDM
                      00231 
                      00232 ; --- memcpy: copy count bytes FSR0 -> FSR1 ---
                      00233 MEMCPY   MACRO count
                      00234         LOCAL   _cp1,_cp2
                      00235 _cp1    MOVF    count,W
                      00236         BZ      _cp2
                      00237         MOVF    POSTINC0,W
                      00238         MOVWF   POSTINC1
                      00239         DECF    count,F
                      00240         GOTO    _cp1
                      00241 _cp2    ENDM
                      00242 
                      00243 ; --- nibble helpers ---
                      00244 GET_HINIB MACRO src,dst
                      00245         MOVF    src,W
                      00246         MOVWF   dst
                      00247         SWAPF   dst,F
                      00248         ANDLW   0x0F
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00249         MOVWF   dst
                      00250         ENDM
                      00251 GET_LONIB MACRO src,dst
                      00252         MOVF    src,W
                      00253         ANDLW   0x0F
                      00254         MOVWF   dst
                      00255         ENDM
                      00256 PACK_NIB  MACRO hi,lo,dst
                      00257         MOVF    hi,W
                      00258         ANDLW   0x0F
                      00259         MOVWF   dst
                      00260         SWAPF   dst,F
                      00261         MOVF    lo,W
                      00262         ANDLW   0x0F
                      00263         IORWF   dst,F
                      00264         ENDM
                      00265 
                      00266 
                      00267 ; div_8_8 divd, divsor, quo_dest, rem_dest
                      00268 ; (divd / divsor) → quotient in quo_dest, remainder in rem_dest
                      00269 ; Uses temps: 0x20 (quo), 0x22 (rem), 0x26 (cnt)
                      00270 
                      00271 div_8_8 MACRO divd, divsor, quo_dest, rem_dest, cnt_dest
                      00272     LOCAL loop, no_sub, next
                      00273 
                      00274     CLRF    quo_dest            ; quo
                      00275     CLRF    rem_dest            ; rem
                      00276     MOVLW   8
                      00277     MOVWF   cnt_dest            ; cnt = 8
                      00278 
                      00279 loop:
                      00280     ; shift dividend bit into remainder (MSB-first)
                      00281     BCF     STATUS, C       ; ensure 0 shifts into LSB
                      00282     RLCF    divd, F
                      00283     RLCF    rem_dest, F         ; rem <<= 1 | carry
                      00284 
                      00285     ; compare rem vs divsor (unsigned)
                      00286     MOVF    divsor, W
                      00287     SUBWF   rem_dest, W         ; C=1 if rem >= divsor
                      00288     BTFSS   STATUS, C
                      00289     GOTO    no_sub
                      00290 
                      00291     ; rem >= divsor → subtract, shift '1' into quotient
                      00292     MOVF    divsor, W
                      00293     SUBWF   rem_dest, F         ; rem -= divsor (leaves C=1)
                      00294     RLCF    quo_dest, F         ; shift in 1 to quo
                      00295     GOTO    next
                      00296 
                      00297 no_sub:
                      00298     ; rem < divsor → shift '0' into quotient
                      00299     BCF     STATUS, C
                      00300     RLCF    quo_dest, F
                      00301 
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00302 next:
                      00303     DECFSZ  cnt_dest, F
                      00304     GOTO    loop
                      00305 
                      00306     CLRF    cnt_dest
Warning[205]: Found directive in column 1. (ENDM)
                      00307 ENDM
                      00308 
                      00309 
                      00310 
                      00311 ; 16-bit ÷ 8-bit Unsigned (long division)
                      00312 ; (divH:divL) / divsor  →  quoH:quoL, rem
                      00313 DIV16U8_LONG MACRO divH, divL, divsor, quoH, quoL, rem, cnt
                      00314     LOCAL _loop, _no_sub, _next
                      00315 
                      00316     CLRF    quoH
                      00317     CLRF    quoL
                      00318     CLRF    rem
                      00319     MOVLW   9
                      00320     MOVWF   cnt
                      00321 
                      00322 _loop
                      00323     ; --- shift dividend into remainder (MSB-first) ---
                      00324     BCF     STATUS, C      ; << ensure 0 shifts into divL LSB
                      00325     RLCF    divL, F
                      00326     RLCF    divH, F
                      00327     RLCF    rem, F         ; C now = old bit7 of rem (not used next)
                      00328 
                      00329     ; --- test rem >= divsor (unsigned) ---
                      00330     MOVF    divsor, W
                      00331     SUBWF   rem, W         ; C=1 if rem >= divsor
                      00332     BTFSS   STATUS, C
                      00333     GOTO    _no_sub
                      00334 
                      00335     ; rem >= divsor → subtract and shift '1' into quotient
                      00336     MOVF    divsor, W
                      00337     SUBWF   rem, F         ; leaves C=1 (no borrow)
                      00338     RLCF    quoL, F        ; shift in C=1
                      00339     RLCF    quoH, F
                      00340     GOTO    _next
                      00341 
                      00342 _no_sub
                      00343     ; rem < divsor → shift '0' into quotient
                      00344     BCF     STATUS, C      ; << be explicit: shift 0
                      00345     RLCF    quoL, F
                      00346     RLCF    quoH, F
                      00347 
                      00348 _next
                      00349     DECFSZ  cnt, F
                      00350     GOTO    _loop
Warning[205]: Found directive in column 1. (ENDM)
                      00351 ENDM
                      00352 
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00353 ;; --- Template for recursion ---
                      00354 ;RECUR_FUNC:
                      00355 ;    ; base case
                      00356 ;    <check condition>
                      00357 ;    BZ  BASE_DONE
                      00358 ;
                      00359 ;    ; save current state
                      00360 ;    MOVFF PARAM, TEMP
                      00361 ;    <modify PARAM for recursive call>
                      00362 ;
                      00363 ;    CALL RECUR_FUNC       ; recursion
                      00364 ;
                      00365 ;    ; restore
                      00366 ;    MOVFF TEMP, PARAM
                      00367 ;    <combine result>
                      00368 ;
                      00369 ;BASE_DONE:
                      00370 ;    RETURN
                      00371 
                      00372 ; =========================================================
                      00373 ; GCD8 a, b, dest, t0
                      00374 ; Computes gcd(a, b) for 8-bit unsigned values.
                      00375 ; Result placed in 'dest'. Uses temp byte 't0'.
                      00376 ; Does not require any other macros.
                      00377 ; =========================================================
                      00378 GCD8 MACRO a, b, dest, t0
                      00379     LOCAL _start, _a_zero, _b_zero, _loop, _mod_try, _mod_done, _done
                      00380 
                      00381 _start
                      00382     ; handle edge cases
                      00383     MOVF    a, W
                      00384     BZ      _a_zero
                      00385     MOVF    b, W
                      00386     BZ      _b_zero
                      00387     GOTO    _loop
                      00388 
                      00389 _a_zero
                      00390     MOVFF   b, dest
                      00391     GOTO    _done
                      00392 
                      00393 _b_zero
                      00394     MOVFF   a, dest
                      00395     GOTO    _done
                      00396 
                      00397 ; Euclid loop:
                      00398 ; while (b != 0) { t0 = a % b; a = b; b = t0; }
                      00399 _loop
                      00400     ; t0 = a % b  (repeated subtraction modulo)
                      00401     MOVF    a, W
                      00402     MOVWF   t0
                      00403 
                      00404 _mod_try
                      00405     ; try t0 -= b; if borrow (C=0), undo and finish modulo
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00406     MOVF    b, W
                      00407     SUBWF   t0, F          ; t0 = t0 - b
                      00408     BTFSC   STATUS, C      ; if no borrow (t0 >= 0), keep subtracting
                      00409     GOTO    _mod_try
                      00410 
                      00411     ; borrow occurred → undo last subtract, t0 is remainder
                      00412     MOVF    b, W
                      00413     ADDWF   t0, F          ; t0 += b (restore to positive remainder)
                      00414 
                      00415 _mod_done
                      00416     ; a = b; b = t0
                      00417     MOVFF   b, a
                      00418     MOVFF   t0, b
                      00419 
                      00420     ; if b == 0 → done (gcd in a)
                      00421     MOVF    b, W
                      00422     BZ      _b_zero        ; reuse path: dest = a
                      00423 
                      00424     GOTO    _loop
                      00425 
                      00426 _done
Warning[205]: Found directive in column 1. (ENDM)
                      00427 ENDM
                      00428 
                      00429 ; =========================================================
                      00430 ; GCD16U_STEIN aL,aH, bL,bH, outL,outH,  tL,tH,  k, tmp
                      00431 ; Computes gcd( (aH:aL), (bH:bL) ) → (outH:outL), unsigned.
                      00432 ; Temps:
                      00433 ;   tL:tH = work copy of B
                      00434 ;   k     = common power-of-two count
                      00435 ;   tmp   = 1-byte scratch for swapping
                      00436 ; No other macro dependencies.
                      00437 ; =========================================================
                      00438 GCD16U_STEIN MACRO aL,aH, bL,bH, outL,outH, tL,tH, k, tmp
                      00439     LOCAL _a_zero,_b_zero,_common,_make_a_odd,_gcd_loop,_t_even
                      00440     LOCAL _cmp_swap,_do_swap,_sub,_done,_shift_back
                      00441 
                      00442     ; out = A, t = B
                      00443     MOVFF   aL, outL
                      00444     MOVFF   aH, outH
                      00445     MOVFF   bL, tL
                      00446     MOVFF   bH, tH
                      00447 
                      00448     ; if A == 0 → gcd = B
                      00449     MOVF    outL, W
                      00450     IORWF   outH, W
                      00451     BZ      _a_zero
                      00452 
                      00453     ; if B == 0 → gcd = A
                      00454     MOVF    tL, W
                      00455     IORWF   tH, W
                      00456     BZ      _b_zero
                      00457 
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00458     ; k = 0 (common factors of 2)
                      00459     CLRF    k
                      00460 
                      00461 _common
                      00462     ; while A even AND B even: A>>=1; B>>=1; k++
                      00463     BTFSC   outL, 0
                      00464     GOTO    _make_a_odd
                      00465     BTFSC   tL, 0
                      00466     GOTO    _make_a_odd
                      00467 
                      00468     ; A >>= 1 (logical)
                      00469     BCF     STATUS, C
                      00470     RRCF    outH, F
                      00471     RRCF    outL, F
                      00472     ; B >>= 1 (logical)
                      00473     BCF     STATUS, C
                      00474     RRCF    tH, F
                      00475     RRCF    tL, F
                      00476     INCF    k, F
                      00477     GOTO    _common
                      00478 
                      00479 _make_a_odd
                      00480     ; make A odd: while A even, A >>= 1
                      00481     BTFSC   outL, 0
                      00482     GOTO    _gcd_loop
                      00483     BCF     STATUS, C
                      00484     RRCF    outH, F
                      00485     RRCF    outL, F
                      00486     GOTO    _make_a_odd
                      00487 
                      00488 _gcd_loop
                      00489     ; if B == 0 → done (A is gcd)
                      00490     MOVF    tL, W
                      00491     IORWF   tH, W
                      00492     BZ      _shift_back
                      00493 
                      00494 _t_even
                      00495     ; while B even, B >>= 1
                      00496     BTFSC   tL, 0
                      00497     GOTO    _cmp_swap
                      00498     BCF     STATUS, C
                      00499     RRCF    tH, F
                      00500     RRCF    tL, F
                      00501     GOTO    _t_even
                      00502 
                      00503 _cmp_swap
                      00504     ; if A > B, swap(A,B) so that B >= A
                      00505     MOVF    tL, W
                      00506     SUBWF   outL, W        ; W = outL - tL
                      00507     MOVF    tH, W
                      00508     SUBWFB  outH, W        ; C=1 → A >= B
                      00509     BTFSC   STATUS, C
                      00510     GOTO    _do_swap       ; swap if A >= B (safe also for equality)
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00511 
                      00512     ; B = B - A
                      00513 _sub
                      00514     MOVF    outL, W
                      00515     SUBWF   tL, F
                      00516     MOVF    outH, W
                      00517     SUBWFB  tH, F
                      00518     GOTO    _gcd_loop
                      00519 
                      00520 _do_swap
                      00521     ; swap outL <-> tL  (use tmp)
                      00522     MOVFF   outL, tmp
                      00523     MOVFF   tL,  outL
                      00524     MOVFF   tmp, tL
                      00525     ; swap outH <-> tH
                      00526     MOVFF   outH, tmp
                      00527     MOVFF   tH,  outH
                      00528     MOVFF   tmp, tH
                      00529     GOTO    _sub
                      00530 
                      00531 _shift_back
                      00532     ; restore common factor: A <<= k
                      00533     MOVF    k, W
                      00534     BZ      _done
                      00535     ; loop: while k-- > 0: A <<= 1
                      00536     ; (logical left shift)
                      00537     BCF     STATUS, C
                      00538     RLCF    outL, F
                      00539     RLCF    outH, F
                      00540     DECF    k, F
                      00541     GOTO    _shift_back
                      00542 
                      00543 _a_zero
                      00544     ; gcd = B
                      00545     MOVFF   tL, outL
                      00546     MOVFF   tH, outH
                      00547     GOTO    _done
                      00548 
                      00549 _b_zero
                      00550     ; gcd = A already in out
                      00551 _done
Warning[205]: Found directive in column 1. (ENDM)
                      00552 ENDM
                      00553 
                      00554 
                      00555 
                      00556 ; =================== end of toolbelt.inc ===================
                      00557 
                      00558 
                      00559 
                      00004 
                      00005   CONFIG OSC = INTIO67
                      00006   CONFIG WDT = OFF
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00007   org 0x00
Warning[207]: Found label after column 1. (i)
  00000030            00008   i EQU 0x30
Warning[207]: Found label after column 1. (j)
  00000031            00009   j EQU 0x31
Warning[207]: Found label after column 1. (limI)
  00000032            00010   limI EQU 0x32
Warning[207]: Found label after column 1. (limJ)
  00000033            00011   limJ EQU 0x33
Warning[207]: Found label after column 1. (sum)
  00000034            00012   sum EQU 0x34
                      00013 ;  LFSR 0, 0x000
                      00014 ;  LFSR 1, 0x010
000000 EF?? F???      00015   GOTO main
                      00016 ;=============================  
                      00017 ;=============================
Warning[207]: Found label after column 1. (bodyLbl)
000004                00018   bodyLbl:
                      00019 ;    MOVFF i, POSTINC0
                      00020 ;    MOVFF j, POSTINC1
000004 2A34           00021     INCF sum, f
000006 0012           00022     RETURN
                      00023   
                      00024   #include "mul_extended.asm"
                      00001 ;;=================================
                      00002 ;    Usage: 
                      00003 ;; main:
                      00004 ;    MOVLF 0x4F ,0x10 ;nL
                      00005 ;    MOVLF 0x00, 0x11 ;nH
                      00006 ;    MOVLF 0xE5, 0x12 ;mL
                      00007 ;    MOVLF 0x03, 0x13 ;mH
                      00008 ;
                      00009 ;    RCALL mul_extended
                      00010 ;;=================================
                      00011 
000008                00012 mul_extended:
Warning[207]: Found label after column 1. (nL)
  00000010            00013     nL EQU 0x10
Warning[207]: Found label after column 1. (nH)
  00000011            00014     nH EQU 0x11
Warning[207]: Found label after column 1. (mL)
  00000012            00015     mL EQU 0x12
Warning[207]: Found label after column 1. (mH)
  00000013            00016     mH EQU 0x13
Warning[207]: Found label after column 1. (dest1)
  00000001            00017     dest1 EQU 0x001
Warning[207]: Found label after column 1. (dest2)
  00000002            00018     dest2 EQU 0x002
Warning[207]: Found label after column 1. (dest3)
  00000003            00019     dest3 EQU 0x003
Warning[207]: Found label after column 1. (dest4)
  00000004            00020     dest4 EQU 0x004
                      00021     ; MOVFF 0x001, nL ;nL
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00022     ; MOVFF 0x002, nH ;nH
                      00023     ; MOVFF 0x003, mL ;mL
                      00024     ; MOVFF 0x004, mH ;mH
                      00025     ; n * m
                      00026     ;; nH(0x11), nL(0x10)
                      00027     ;; mH(0x13), mL(0x12)
                      00028     ;;out:   Large -->  Small
                      00029     ;;out: 0x004 0x003 0x002 0x001
000008 6A01           00030     CLRF dest1
00000A 6A02           00031     CLRF dest2
00000C 6A03           00032     CLRF dest3
00000E 6A04           00033     CLRF dest4
Warning[207]: Found label after column 1. (nL_mL)
000010                00034     nL_mL:
000010 5010           00035         MOVF nL, w
000012 0212           00036         MULWF mL
                      00037         
000014 50F3           00038         MOVF PRODL, W
000016 2601           00039         ADDWF dest1, 1
000018 50F4           00040         MOVF PRODH, W
00001A 2602           00041         ADDWF dest2, 1
Warning[207]: Found label after column 1. (nH_mL)
00001C                00042     nH_mL:
00001C 5011           00043         MOVF nH, w
00001E 0212           00044         MULWF mL
                      00045         
000020 50F3           00046         MOVF PRODL, W
000022 2602           00047         ADDWF dest2, 1
000024 50F4           00048         MOVF PRODH, W
000026 2203           00049         ADDWFC dest3, 1
Warning[207]: Found label after column 1. (nL_mH)
000028                00050     nL_mH:
000028 5010           00051         MOVF nL, w
00002A 0213           00052         MULWF mH
                      00053         
00002C 50F3           00054         MOVF PRODL, W
00002E 2602           00055         ADDWF dest2, 1
000030 50F4           00056         MOVF PRODH, W
000032 2203           00057         ADDWFC dest3, 1
Warning[207]: Found label after column 1. (nH_mH)
000034                00058     nH_mH:
000034 5011           00059         MOVF nH, w
000036 0213           00060         MULWF mH
                      00061         
000038 50F3           00062         MOVF PRODL, W
00003A 2603           00063         ADDWF dest3, 1
00003C 50F4           00064         MOVF PRODH, W
00003E 2204           00065         ADDWFC dest4, 1
                      00066 
Warning[207]: Found label after column 1. (STEP2)
000040                00067     STEP2:
                      00068         ; if op1(nH(0x11), nL(0x10)) is negative, subtrasct op2 from upper byte
000040 AE11           00069         BTFSS nH, 7 ;is nH is negative
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000042 EF?? F???      00070         GOTO STEP3
                      00071         
                      00072         ;upper byte = 0x04, 0x03
000046 5012           00073         MOVF mL, w
000048 5E03           00074         SUBWF dest3
00004A 5013           00075         MOVF mH, w
00004C 5A04           00076         SUBWFB dest4
                      00077         
Warning[207]: Found label after column 1. (STEP3)
00004E                00078     STEP3:
                      00079         ; if op2(mH(0x13), mL(0x12)) is negative, subtrasct op1 from upper byte
00004E AE13           00080         BTFSS mH, 7 ;mH is negative
000050 EF?? F???      00081         GOTO finish
                      00082         
000054 5010           00083         MOVF nL, w
000056 5E03           00084         SUBWF dest3
000058 5011           00085         MOVF nH, w
00005A 5A04           00086         SUBWFB dest4
                      00087         
Warning[207]: Found label after column 1. (finish)
00005C                00088     finish:
                      00025 ;  #include "bubble_sort"
                      00026 ;=============================
                      00027 ; MAIN PROGRAM
                      00028 ;=============================
00005C                00029 main:
                      00030   ; ====== Prepare three source lists ======
                      00031   MOVLF 0x90, 0x00
00005C 0E90               M         MOVLW   0x90
00005E 6E00               M         MOVWF   0x00, ACCESS
                      00032   MOVLF 0x00, 0x01
000060 0E00               M         MOVLW   0x00
000062 6E01               M         MOVWF   0x01, ACCESS
                      00033   MOVLF 0x0C, 0x02
000064 0E0C               M         MOVLW   0x0C
000066 6E02               M         MOVWF   0x02, ACCESS
                      00034   MOVLF 0x00, 0x03
000068 0E00               M         MOVLW   0x00
00006A 6E03               M         MOVWF   0x03, ACCESS
                      00035   
                      00036   ; ====== Sort merged data ======
                      00037   
                      00038 ;  DIV16U8 0x10, 0x11, 0x12, 0x20, 0x21, 0x30, 0x31
                      00039 ;  MAC16_8x8 0x12, 0x12, 0x20, 0x21
                      00040 ;  FOR8 0x00, 0x0A, something
                      00041   GCD16U_STEIN 0x01, 0x00, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09
  0000                    M     LOCAL _a_zero,_b_zero,_common,_make_a_odd,_gcd_loop,_t_even
  0000                    M     LOCAL _cmp_swap,_do_swap,_sub,_done,_shift_back
                          M 
                          M     ; out = A, t = B
00006C C001 F004          M     MOVFF   0x01, 0x04
000070 C000 F005          M     MOVFF   0x00, 0x05
000074 C002 F006          M     MOVFF   0x02, 0x06
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000078 C003 F007          M     MOVFF   0x03, 0x07
                          M 
                          M     ; if A == 0 → gcd = B
00007C 5004               M     MOVF    0x04, W
00007E 1005               M     IORWF   0x05, W
000080 E0??               M     BZ      _a_zero
                          M 
                          M     ; if B == 0 → gcd = A
000082 5006               M     MOVF    0x06, W
000084 1007               M     IORWF   0x07, W
000086 E0??               M     BZ      _b_zero
                          M 
                          M     ; k = 0 (common factors of 2)
000088 6A08               M     CLRF    0x08
                          M 
00008A                    M _common
                          M     ; while A even AND B even: A>>=1; B>>=1; k++
00008A B004               M     BTFSC   0x04, 0
00008C EF?? F???          M     GOTO    _make_a_odd
000090 B006               M     BTFSC   0x06, 0
000092 EF?? F???          M     GOTO    _make_a_odd
                          M 
                          M     ; A >>= 1 (logical)
000096 90D8               M     BCF     STATUS, C
000098 3205               M     RRCF    0x05, F
00009A 3204               M     RRCF    0x04, F
                          M     ; B >>= 1 (logical)
00009C 90D8               M     BCF     STATUS, C
00009E 3207               M     RRCF    0x07, F
0000A0 3206               M     RRCF    0x06, F
0000A2 2A08               M     INCF    0x08, F
0000A4 EF?? F???          M     GOTO    _common
                          M 
0000A8                    M _make_a_odd
                          M     ; make A odd: while A even, A >>= 1
0000A8 B004               M     BTFSC   0x04, 0
0000AA EF?? F???          M     GOTO    _gcd_loop
0000AE 90D8               M     BCF     STATUS, C
0000B0 3205               M     RRCF    0x05, F
0000B2 3204               M     RRCF    0x04, F
0000B4 EF?? F???          M     GOTO    _make_a_odd
                          M 
0000B8                    M _gcd_loop
                          M     ; if B == 0 → done (A is gcd)
0000B8 5006               M     MOVF    0x06, W
0000BA 1007               M     IORWF   0x07, W
0000BC E0??               M     BZ      _shift_back
                          M 
0000BE                    M _t_even
                          M     ; while B even, B >>= 1
0000BE B006               M     BTFSC   0x06, 0
0000C0 EF?? F???          M     GOTO    _cmp_swap
0000C4 90D8               M     BCF     STATUS, C
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000C6 3207               M     RRCF    0x07, F
0000C8 3206               M     RRCF    0x06, F
0000CA EF?? F???          M     GOTO    _t_even
                          M 
0000CE                    M _cmp_swap
                          M     ; if A > B, swap(A,B) so that B >= A
0000CE 5006               M     MOVF    0x06, W
0000D0 5C04               M     SUBWF   0x04, W        ; W = outL - tL
0000D2 5007               M     MOVF    0x07, W
0000D4 5805               M     SUBWFB  0x05, W        ; C=1 → A >= B
0000D6 B0D8               M     BTFSC   STATUS, C
0000D8 EF?? F???          M     GOTO    _do_swap       ; swap if A >= B (safe also for equality)
                          M 
                          M     ; B = B - A
0000DC                    M _sub
0000DC 5004               M     MOVF    0x04, W
0000DE 5E06               M     SUBWF   0x06, F
0000E0 5005               M     MOVF    0x05, W
0000E2 5A07               M     SUBWFB  0x07, F
0000E4 EF?? F???          M     GOTO    _gcd_loop
                          M 
0000E8                    M _do_swap
                          M     ; swap outL <-> tL  (use tmp)
0000E8 C004 F009          M     MOVFF   0x04, 0x09
0000EC C006 F004          M     MOVFF   0x06,  0x04
0000F0 C009 F006          M     MOVFF   0x09, 0x06
                          M     ; swap outH <-> tH
0000F4 C005 F009          M     MOVFF   0x05, 0x09
0000F8 C007 F005          M     MOVFF   0x07,  0x05
0000FC C009 F007          M     MOVFF   0x09, 0x07
000100 EF?? F???          M     GOTO    _sub
                          M 
000104                    M _shift_back
                          M     ; restore common factor: A <<= k
000104 5008               M     MOVF    0x08, W
000106 E0??               M     BZ      _done
                          M     ; loop: while k-- > 0: A <<= 1
                          M     ; (logical left shift)
000108 90D8               M     BCF     STATUS, C
00010A 3604               M     RLCF    0x04, F
00010C 3605               M     RLCF    0x05, F
00010E 0608               M     DECF    0x08, F
000110 EF?? F???          M     GOTO    _shift_back
                          M 
000114                    M _a_zero
                          M     ; gcd = B
000114 C006 F004          M     MOVFF   0x06, 0x04
000118 C007 F005          M     MOVFF   0x07, 0x05
00011C EF?? F???          M     GOTO    _done
                          M 
000120                    M _b_zero
                          M     ; gcd = A already in out
000120                    M _done
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00042 ;  FOR2D_REG i, j, limI, limJ, bodyLbl
000120 0000           00043   NOP
                      00044   END
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADD16                             
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000002
AN9                               00000003
ASR16                             
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

BGST                              00000005
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
C                                 00000000
C1INV                             00000004
C1OUT_CMCON                       00000006
C1OUT_PORTA                       00000004
C2INV                             00000005
C2OUT_CMCON                       00000007
C2OUT_PORTA                       00000005
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKI                              00000007
CLKO                              00000006
CLRBIT                            
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMP16                             
CREN                              00000004
CS                                00000002
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEC16                             
DIV16U8                           
DIV16U8_LONG                      
DONE                              00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1DEL                          00000FB7
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

FAST                              00000001
FERR                              00000002
FLT0                              00000000
FLTS                              00000002
FOR2D_REG                         
FOR8                              
FOR8_REG                          
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCD16U_STEIN                      
GCD8                              
GCEN                              00000007
GET_LONIB                         
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
IBF                               00000007
IBOV                              00000005
IDLEN                             00000007
INC16                             
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LSL16                             
LSR16                             
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MAC16_8x8                         
MCLR                              00000003
MEMSET                            
MOVLF                             
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000002
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PACK_NIB                          
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

SDI                               00000004
SDO                               00000005
SEN                               00000000
SENDB                             00000003
SETBIT                            
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STEP2                             00000040
STEP3                             0000004E
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SUB16                             
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

T13CKI                            00000000
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VPP                               00000003
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XCHG                              
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CCP2MX_PORTBE_3H                 000000FE
_CCP2MX_PORTC_3H                  000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO6_1H                     000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_INTIO67_1H                   000000F8
_OSC_INTIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO6_1H                     000000F7
_OSC_RC_1H                        000000F3
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4520                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
bodyLbl                           00000004
dest1                             00000001
dest2                             00000002
dest3                             00000003
dest4                             00000004
div_8_8                           
finish                            0000005C
i                                 00000030
j                                 00000031
MPASM 5.84                    PLAYGROUND.ASM   10-21-2025  22:32:53         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

limI                              00000032
limJ                              00000033
mH                                00000013
mL                                00000012
main                              0000005C
mul_extended                      00000008
nH                                00000011
nH_mH                             00000034
nH_mL                             0000001C
nL                                00000010
nL_mH                             00000028
nL_mL                             00000010
sum                               00000034

Errors   :     0
Warnings :    29 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

